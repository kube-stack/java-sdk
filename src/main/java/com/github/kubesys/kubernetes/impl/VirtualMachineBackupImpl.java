/**
 * Copyright (2019, ) Institute of Software, Chinese Academy of Sciences
 */
package com.github.kubesys.kubernetes.impl;

import com.github.kubesys.kubernetes.api.model.*;
import com.github.kubesys.kubernetes.api.model.virtualmachinebackup.Lifecycle;
import com.github.kubesys.kubernetes.api.model.virtualmachinebackup.Lifecycle.*;
import com.github.kubesys.kubernetes.utils.RegExpUtils;

import java.util.regex.Pattern;

//import com.github.kubesys.kubernetes.api.model.virtualmachinepool.Lifecycle.RegisterPool;
//import com.github.kubesys.kubernetes.api.model.virtualmachinepool.Lifecycle.UnregisterPool;

/**
 * @author  wuheng@otcaix.iscas.ac.cn
 * 
 * @version 1.0.0
 * @since   2019/9/1
 **/
public class VirtualMachineBackupImpl extends AbstractImpl<VirtualMachineBackup, VirtualMachineBackupList, VirtualMachineBackupSpec> {

	@Override
	public VirtualMachineBackup getModel() {
		return new VirtualMachineBackup();
	}

	@Override
	public VirtualMachineBackupSpec getSpec() {
		return new VirtualMachineBackupSpec();
	}
	
	@Override
	public Object getLifecycle() {
		return new Lifecycle();
	}

	
	@Override
	public VirtualMachineBackupSpec getSpec(VirtualMachineBackup r) {
		return r.getSpec();
	}

	/*************************************************
	 * 
	 * Generated by <code>MethodGenerator<code>
	 * 
	 **************************************************/

//	public boolean cleanVMBackup(String name, CleanVMBackup cleanVMBackup) throws Exception {
//		return cleanVMBackup(name, cleanVMBackup, null);
//	}
//
//	public boolean cleanVMBackup(String name, CleanVMBackup cleanVMBackup, String eventId) throws Exception {
//		Pattern pattern = Pattern.compile(RegExpUtils.NAME_PATTERN);
//		if (!pattern.matcher(name).matches()) {
//			throw new IllegalArgumentException("the length must be between 4 and 100, and it can only includes a-z, 0-9 and -.");
//		}
//		return delete(name, updateMetadata(name, eventId), cleanVMBackup);
//	}
//
//	public boolean cleanVMBackup(String name, String nodeName, CleanVMBackup cleanVMBackup) throws Exception {
//		updateHost(name, nodeName);
//		return cleanVMBackup(name, cleanVMBackup, null);
//	}
//
//	public boolean cleanVMBackup(String name, String nodeName, CleanVMBackup cleanVMBackup, String eventId) throws Exception {
//		updateHost(name, nodeName);
//		return cleanVMBackup(name, cleanVMBackup, eventId);
//	}
}